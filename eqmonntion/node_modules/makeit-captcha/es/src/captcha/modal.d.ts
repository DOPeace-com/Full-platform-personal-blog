export declare const captchaModalProps: () => {
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    show: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    image: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    position: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    mask: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    maskClosable: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    themeColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    bgColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    boxShadow: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    boxShadowColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    boxShadowBlur: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    maxTries: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    verifyParams: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    } & {
        default: () => {
            [key: string]: any;
        };
    };
    verifyMethod: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    } & {
        default: string;
    };
    verifyAction: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
};
declare const _default: import("vue").DefineComponent<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    show: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    image: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    position: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    mask: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    maskClosable: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    themeColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    bgColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    boxShadow: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    boxShadowColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    boxShadowBlur: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    maxTries: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    verifyParams: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    } & {
        default: () => {
            [key: string]: any;
        };
    };
    verifyMethod: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    } & {
        default: string;
    };
    verifyAction: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "modalClose"[], "modalClose", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    show: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    image: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    position: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    mask: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    maskClosable: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    themeColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    bgColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    boxShadow: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    } & {
        default: boolean;
    };
    boxShadowColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    boxShadowBlur: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    maxTries: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    verifyParams: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    } & {
        default: () => {
            [key: string]: any;
        };
    };
    verifyMethod: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    } & {
        default: string;
    };
    verifyAction: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
}>> & {
    onModalClose?: (...args: any[]) => any;
}, {
    prefixCls: string;
    themeColor: string;
    bgColor: string;
    boxShadow: boolean;
    boxShadowColor: string;
    boxShadowBlur: number;
    image: string;
    mask: boolean;
    maskClosable: boolean;
    maxTries: number;
    verifyParams: {
        [key: string]: any;
    };
    verifyAction: string;
    verifyMethod: string;
    show: boolean;
    position: {
        [key: string]: any;
    };
}>;
export default _default;
